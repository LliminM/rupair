// MIR for `main` 0 nll

| Free Region Mapping
| '?0 | Global | ['?0, '?1]
| '?1 | Local | ['?1]
|
| Inferred Region Values
| '?0 | U0 | {bb0[0..=8], bb1[0..=1], bb2[0..=8], bb3[0], bb4[0..=3], bb5[0..=1], bb6[0], bb7[0..=4], bb8[0..=4], bb9[0..=1], bb10[0..=10], bb11[0..=1], bb12[0..=9], bb13[0..=1], bb14[0..=2], bb15[0], bb16[0], bb17[0], bb18[0], bb19[0], bb20[0], '?0, '?1}
| '?1 | U0 | {bb0[0..=8], bb1[0..=1], bb2[0..=8], bb3[0], bb4[0..=3], bb5[0..=1], bb6[0], bb7[0..=4], bb8[0..=4], bb9[0..=1], bb10[0..=10], bb11[0..=1], bb12[0..=9], bb13[0..=1], bb14[0..=2], bb15[0], bb16[0], bb17[0], bb18[0], bb19[0], bb20[0], '?1}
| '?2 | U0 | {bb0[0..=8], bb1[0..=1], bb2[0..=8], bb3[0], bb4[0..=3], bb5[0..=1], bb6[0], bb7[0..=4], bb8[0..=4], bb9[0..=1], bb10[0..=10], bb11[0..=1], bb12[0..=9], bb13[0..=1], bb14[0..=2], bb15[0], bb16[0], bb17[0], bb18[0], bb19[0], bb20[0], '?0, '?1}
| '?3 | U0 | {bb0[0..=8], bb1[0..=1], bb2[0..=8], bb3[0], bb4[0..=3], bb5[0..=1], bb6[0], bb7[0..=4], bb8[0..=4], bb9[0..=1], bb10[0..=10], bb11[0..=1], bb12[0..=9], bb13[0..=1], bb14[0..=2], bb15[0], bb16[0], bb17[0], bb18[0], bb19[0], bb20[0], '?0, '?1}
| '?4 | U0 | {bb10[7..=10], bb11[0..=1]}
| '?5 | U0 | {bb10[7..=10], bb11[0..=1]}
| '?6 | U0 | {bb0[0..=8], bb1[0..=1], bb2[0..=8], bb3[0], bb4[0..=3], bb5[0..=1], bb6[0], bb7[0..=4], bb8[0..=4], bb9[0..=1], bb10[0..=10], bb11[0..=1], bb12[0..=9], bb13[0..=1], bb14[0..=2], bb15[0], bb16[0], bb17[0], bb18[0], bb19[0], bb20[0], '?0, '?1}
| '?7 | U0 | {bb0[0..=8], bb1[0..=1], bb2[0..=8], bb3[0], bb4[0..=3], bb5[0..=1], bb6[0], bb7[0..=4], bb8[0..=4], bb9[0..=1], bb10[0..=10], bb11[0..=1], bb12[0..=9], bb13[0..=1], bb14[0..=2], bb15[0], bb16[0], bb17[0], bb18[0], bb19[0], bb20[0], '?0, '?1}
| '?8 | U0 | {bb0[0..=8], bb1[0..=1], bb2[0..=8], bb3[0], bb4[0..=3], bb5[0..=1], bb6[0], bb7[0..=4], bb8[0..=4], bb9[0..=1], bb10[0..=10], bb11[0..=1], bb12[0..=9], bb13[0..=1], bb14[0..=2], bb15[0], bb16[0], bb17[0], bb18[0], bb19[0], bb20[0], '?0, '?1}
| '?9 | U0 | {bb0[0..=8], bb1[0..=1], bb2[0..=8], bb3[0], bb4[0..=3], bb5[0..=1], bb6[0], bb7[0..=4], bb8[0..=4], bb9[0..=1], bb10[0..=10], bb11[0..=1], bb12[0..=9], bb13[0..=1], bb14[0..=2], bb15[0], bb16[0], bb17[0], bb18[0], bb19[0], bb20[0], '?0, '?1}
| '?10 | U0 | {bb0[5..=8], bb1[0..=1]}
| '?11 | U0 | {bb0[5..=8], bb1[0..=1]}
| '?12 | U0 | {bb0[0..=8], bb1[0..=1], bb2[0..=8], bb3[0], bb4[0..=3], bb5[0..=1], bb6[0], bb7[0..=4], bb8[0..=4], bb9[0..=1], bb10[0..=10], bb11[0..=1], bb12[0..=9], bb13[0..=1], bb14[0..=2], bb15[0], bb16[0], bb17[0], bb18[0], bb19[0], bb20[0], '?0, '?1}
| '?13 | U0 | {bb0[0..=8], bb1[0..=1], bb2[0..=8], bb3[0], bb4[0..=3], bb5[0..=1], bb6[0], bb7[0..=4], bb8[0..=4], bb9[0..=1], bb10[0..=10], bb11[0..=1], bb12[0..=9], bb13[0..=1], bb14[0..=2], bb15[0], bb16[0], bb17[0], bb18[0], bb19[0], bb20[0], '?0, '?1}
| '?14 | U0 | {bb0[5..=8], bb1[0..=1]}
| '?15 | U0 | {bb0[0..=8], bb1[0..=1], bb2[0..=8], bb3[0], bb4[0..=3], bb5[0..=1], bb6[0], bb7[0..=4], bb8[0..=4], bb9[0..=1], bb10[0..=10], bb11[0..=1], bb12[0..=9], bb13[0..=1], bb14[0..=2], bb15[0], bb16[0], bb17[0], bb18[0], bb19[0], bb20[0], '?0, '?1}
| '?16 | U0 | {bb0[6..=8], bb1[0..=1]}
| '?17 | U0 | {bb0[7..=8], bb1[0..=1]}
| '?18 | U0 | {bb0[8], bb1[0..=1]}
| '?19 | U0 | {bb0[0..=8], bb1[0..=1], bb2[0..=8], bb3[0], bb4[0..=3], bb5[0..=1], bb6[0], bb7[0..=4], bb8[0..=4], bb9[0..=1], bb10[0..=10], bb11[0..=1], bb12[0..=9], bb13[0..=1], bb14[0..=2], bb15[0], bb16[0], bb17[0], bb18[0], bb19[0], bb20[0], '?0, '?1}
| '?20 | U0 | {bb0[0..=8], bb1[0..=1], bb2[0..=8], bb3[0], bb4[0..=3], bb5[0..=1], bb6[0], bb7[0..=4], bb8[0..=4], bb9[0..=1], bb10[0..=10], bb11[0..=1], bb12[0..=9], bb13[0..=1], bb14[0..=2], bb15[0], bb16[0], bb17[0], bb18[0], bb19[0], bb20[0], '?0, '?1}
| '?21 | U0 | {bb0[0..=8], bb1[0..=1], bb2[0..=8], bb3[0], bb4[0..=3], bb5[0..=1], bb6[0], bb7[0..=4], bb8[0..=4], bb9[0..=1], bb10[0..=10], bb11[0..=1], bb12[0..=9], bb13[0..=1], bb14[0..=2], bb15[0], bb16[0], bb17[0], bb18[0], bb19[0], bb20[0], '?0, '?1}
| '?22 | U0 | {bb0[0..=8], bb1[0..=1], bb2[0..=8], bb3[0], bb4[0..=3], bb5[0..=1], bb6[0], bb7[0..=4], bb8[0..=4], bb9[0..=1], bb10[0..=10], bb11[0..=1], bb12[0..=9], bb13[0..=1], bb14[0..=2], bb15[0], bb16[0], bb17[0], bb18[0], bb19[0], bb20[0], '?0, '?1}
| '?23 | U0 | {bb10[7..=10], bb11[0..=1]}
| '?24 | U0 | {bb0[0..=8], bb1[0..=1], bb2[0..=8], bb3[0], bb4[0..=3], bb5[0..=1], bb6[0], bb7[0..=4], bb8[0..=4], bb9[0..=1], bb10[0..=10], bb11[0..=1], bb12[0..=9], bb13[0..=1], bb14[0..=2], bb15[0], bb16[0], bb17[0], bb18[0], bb19[0], bb20[0], '?0, '?1}
| '?25 | U0 | {bb10[8..=10], bb11[0..=1]}
| '?26 | U0 | {bb10[9..=10], bb11[0..=1]}
| '?27 | U0 | {bb10[10], bb11[0..=1]}
| '?28 | U0 | {bb0[0..=8], bb1[0..=1], bb2[0..=8], bb3[0], bb4[0..=3], bb5[0..=1], bb6[0], bb7[0..=4], bb8[0..=4], bb9[0..=1], bb10[0..=10], bb11[0..=1], bb12[0..=9], bb13[0..=1], bb14[0..=2], bb15[0], bb16[0], bb17[0], bb18[0], bb19[0], bb20[0], '?0, '?1}
| '?29 | U0 | {bb0[0..=8], bb1[0..=1], bb2[0..=8], bb3[0], bb4[0..=3], bb5[0..=1], bb6[0], bb7[0..=4], bb8[0..=4], bb9[0..=1], bb10[0..=10], bb11[0..=1], bb12[0..=9], bb13[0..=1], bb14[0..=2], bb15[0], bb16[0], bb17[0], bb18[0], bb19[0], bb20[0], '?0, '?1}
| '?30 | U0 | {bb1[0..=1]}
| '?31 | U0 | {bb0[8], bb1[0..=1]}
| '?32 | U0 | {bb0[0..=8], bb1[0..=1], bb2[0..=8], bb3[0], bb4[0..=3], bb5[0..=1], bb6[0], bb7[0..=4], bb8[0..=4], bb9[0..=1], bb10[0..=10], bb11[0..=1], bb12[0..=9], bb13[0..=1], bb14[0..=2], bb15[0], bb16[0], bb17[0], bb18[0], bb19[0], bb20[0], '?0, '?1}
| '?33 | U0 | {bb0[7..=8], bb1[0..=1]}
| '?34 | U0 | {bb0[0..=8], bb1[0..=1], bb2[0..=8], bb3[0], bb4[0..=3], bb5[0..=1], bb6[0], bb7[0..=4], bb8[0..=4], bb9[0..=1], bb10[0..=10], bb11[0..=1], bb12[0..=9], bb13[0..=1], bb14[0..=2], bb15[0], bb16[0], bb17[0], bb18[0], bb19[0], bb20[0], '?0, '?1}
| '?35 | U0 | {}
| '?36 | U0 | {bb0[0..=8], bb1[0..=1], bb2[0..=8], bb3[0], bb4[0..=3], bb5[0..=1], bb6[0], bb7[0..=4], bb8[0..=4], bb9[0..=1], bb10[0..=10], bb11[0..=1], bb12[0..=9], bb13[0..=1], bb14[0..=2], bb15[0], bb16[0], bb17[0], bb18[0], bb19[0], bb20[0], '?0, '?1}
| '?37 | U0 | {bb0[0..=8], bb1[0..=1], bb2[0..=8], bb3[0], bb4[0..=3], bb5[0..=1], bb6[0], bb7[0..=4], bb8[0..=4], bb9[0..=1], bb10[0..=10], bb11[0..=1], bb12[0..=9], bb13[0..=1], bb14[0..=2], bb15[0], bb16[0], bb17[0], bb18[0], bb19[0], bb20[0], '?0, '?1}
| '?38 | U0 | {bb0[0..=8], bb1[0..=1], bb2[0..=8], bb3[0], bb4[0..=3], bb5[0..=1], bb6[0], bb7[0..=4], bb8[0..=4], bb9[0..=1], bb10[0..=10], bb11[0..=1], bb12[0..=9], bb13[0..=1], bb14[0..=2], bb15[0], bb16[0], bb17[0], bb18[0], bb19[0], bb20[0], '?0, '?1}
| '?39 | U0 | {bb0[0..=8], bb1[0..=1], bb2[0..=8], bb3[0], bb4[0..=3], bb5[0..=1], bb6[0], bb7[0..=4], bb8[0..=4], bb9[0..=1], bb10[0..=10], bb11[0..=1], bb12[0..=9], bb13[0..=1], bb14[0..=2], bb15[0], bb16[0], bb17[0], bb18[0], bb19[0], bb20[0], '?0, '?1}
| '?40 | U0 | {bb11[0..=1]}
| '?41 | U0 | {bb10[10], bb11[0..=1]}
| '?42 | U0 | {bb0[0..=8], bb1[0..=1], bb2[0..=8], bb3[0], bb4[0..=3], bb5[0..=1], bb6[0], bb7[0..=4], bb8[0..=4], bb9[0..=1], bb10[0..=10], bb11[0..=1], bb12[0..=9], bb13[0..=1], bb14[0..=2], bb15[0], bb16[0], bb17[0], bb18[0], bb19[0], bb20[0], '?0, '?1}
| '?43 | U0 | {bb10[9..=10], bb11[0..=1]}
| '?44 | U0 | {bb0[0..=8], bb1[0..=1], bb2[0..=8], bb3[0], bb4[0..=3], bb5[0..=1], bb6[0], bb7[0..=4], bb8[0..=4], bb9[0..=1], bb10[0..=10], bb11[0..=1], bb12[0..=9], bb13[0..=1], bb14[0..=2], bb15[0], bb16[0], bb17[0], bb18[0], bb19[0], bb20[0], '?0, '?1}
| '?45 | U0 | {}
| '?46 | U0 | {bb10[8..=10], bb11[0..=1]}
| '?47 | U0 | {bb0[0..=8], bb1[0..=1], bb2[0..=8], bb3[0], bb4[0..=3], bb5[0..=1], bb6[0], bb7[0..=4], bb8[0..=4], bb9[0..=1], bb10[0..=10], bb11[0..=1], bb12[0..=9], bb13[0..=1], bb14[0..=2], bb15[0], bb16[0], bb17[0], bb18[0], bb19[0], bb20[0], '?0, '?1}
| '?48 | U0 | {bb0[6..=8], bb1[0..=1]}
| '?49 | U0 | {bb0[0..=8], bb1[0..=1], bb2[0..=8], bb3[0], bb4[0..=3], bb5[0..=1], bb6[0], bb7[0..=4], bb8[0..=4], bb9[0..=1], bb10[0..=10], bb11[0..=1], bb12[0..=9], bb13[0..=1], bb14[0..=2], bb15[0], bb16[0], bb17[0], bb18[0], bb19[0], bb20[0], '?0, '?1}
| '?50 | U0 | {bb0[8], bb1[0..=1]}
| '?51 | U0 | {bb10[10], bb11[0..=1]}
| '?52 | U0 | {bb0[8], bb1[0..=1]}
| '?53 | U0 | {bb0[8], bb1[0..=1]}
| '?54 | U0 | {bb10[10], bb11[0..=1]}
| '?55 | U0 | {bb10[10], bb11[0..=1]}
| '?56 | U0 | {bb1[1]}
| '?57 | U0 | {bb11[1]}
|
| Inference Constraints
| '?0 live at {bb0[0..=8], bb1[0..=1], bb2[0..=8], bb3[0], bb4[0..=3], bb5[0..=1], bb6[0], bb7[0..=4], bb8[0..=4], bb9[0..=1], bb10[0..=10], bb11[0..=1], bb12[0..=9], bb13[0..=1], bb14[0..=2], bb15[0], bb16[0], bb17[0], bb18[0], bb19[0], bb20[0]}
| '?1 live at {bb0[0..=8], bb1[0..=1], bb2[0..=8], bb3[0], bb4[0..=3], bb5[0..=1], bb6[0], bb7[0..=4], bb8[0..=4], bb9[0..=1], bb10[0..=10], bb11[0..=1], bb12[0..=9], bb13[0..=1], bb14[0..=2], bb15[0], bb16[0], bb17[0], bb18[0], bb19[0], bb20[0]}
| '?3 live at {bb10[7]}
| '?9 live at {bb0[5]}
| '?14 live at {bb0[5]}
| '?15 live at {bb0[5]}
| '?16 live at {bb0[6]}
| '?17 live at {bb0[7]}
| '?18 live at {bb0[8]}
| '?19 live at {bb3[0]}
| '?20 live at {bb8[1]}
| '?21 live at {bb8[4]}
| '?22 live at {bb8[4]}
| '?23 live at {bb10[7]}
| '?24 live at {bb10[7]}
| '?25 live at {bb10[8]}
| '?26 live at {bb10[9]}
| '?27 live at {bb10[10]}
| '?28 live at {bb12[7]}
| '?30 live at {bb1[0..=1]}
| '?31 live at {bb0[8]}
| '?32 live at {bb0[8]}
| '?33 live at {bb0[7]}
| '?34 live at {bb0[7]}
| '?40 live at {bb11[0..=1]}
| '?41 live at {bb10[10]}
| '?42 live at {bb10[10]}
| '?43 live at {bb10[9]}
| '?44 live at {bb10[9]}
| '?46 live at {bb10[8]}
| '?47 live at {bb10[8]}
| '?48 live at {bb0[6]}
| '?49 live at {bb0[6]}
| '?56 live at {bb1[1]}
| '?57 live at {bb11[1]}
| '?0: '?18 due to BoringNoLocation at Single(bb0[8]) (C:\Users\dell\.rustup\toolchains\nightly-x86_64-pc-windows-msvc\lib/rustlib/src/rust\library\std\src\macros.rs:143:28: 143:61 (#21)
| '?0: '?27 due to BoringNoLocation at Single(bb10[10]) (C:\Users\dell\.rustup\toolchains\nightly-x86_64-pc-windows-msvc\lib/rustlib/src/rust\library\std\src\macros.rs:143:28: 143:61 (#23)
| '?0: '?29 due to BoringNoLocation at All(examples/safe_buffer.rs:50:14: 50:40) (examples/safe_buffer.rs:50:14: 50:40 (#0)
| '?0: '?37 due to Boring at Single(bb2[8]) (examples/safe_buffer.rs:52:5: 52:29 (#0)
| '?2: '?7 due to Boring at Single(bb10[7]) (examples/safe_buffer.rs:53:14: 53:28 (#0)
| '?3: '?2 due to Boring at Single(bb10[7]) (examples/safe_buffer.rs:53:14: 53:28 (#0)
| '?4: '?5 due to Boring at Single(bb10[7]) (examples/safe_buffer.rs:53:14: 53:28 (#0)
| '?5: '?23 due to Boring at Single(bb10[7]) (examples/safe_buffer.rs:53:14: 53:28 (#0)
| '?6: '?24 due to Boring at Single(bb10[7]) (examples/safe_buffer.rs:53:14: 53:28 (#0)
| '?7: '?6 due to Boring at Single(bb10[7]) (examples/safe_buffer.rs:53:14: 53:28 (#0)
| '?8: '?13 due to Boring at Single(bb0[5]) (examples/safe_buffer.rs:51:14: 51:35 (#0)
| '?9: '?8 due to Boring at Single(bb0[5]) (examples/safe_buffer.rs:51:14: 51:35 (#0)
| '?10: '?11 due to Boring at Single(bb0[5]) (examples/safe_buffer.rs:51:14: 51:35 (#0)
| '?11: '?14 due to Boring at Single(bb0[5]) (examples/safe_buffer.rs:51:14: 51:35 (#0)
| '?12: '?15 due to Boring at Single(bb0[5]) (examples/safe_buffer.rs:51:14: 51:35 (#0)
| '?13: '?12 due to Boring at Single(bb0[5]) (examples/safe_buffer.rs:51:14: 51:35 (#0)
| '?14: '?11 due to Boring at Single(bb0[5]) (examples/safe_buffer.rs:51:14: 51:35 (#0)
| '?14: '?48 due to Boring at Single(bb0[5]) (examples/safe_buffer.rs:51:14: 51:35 (#0)
| '?15: '?12 due to Boring at Single(bb0[5]) (examples/safe_buffer.rs:51:14: 51:35 (#0)
| '?15: '?49 due to Boring at Single(bb0[5]) (examples/safe_buffer.rs:51:14: 51:35 (#0)
| '?16: '?33 due to Boring at Single(bb0[6]) (examples/safe_buffer.rs:51:14: 51:35 (#0)
| '?17: '?31 due to Boring at Single(bb0[7]) (examples/safe_buffer.rs:51:14: 51:35 (#0)
| '?18: '?30 due to Boring at Single(bb0[8]) (C:\Users\dell\.rustup\toolchains\nightly-x86_64-pc-windows-msvc\lib/rustlib/src/rust\library\std\src\macros.rs:143:28: 143:61 (#21)
| '?18: '?50 due to TypeAnnotation(GenericArg) at Single(bb0[8]) (C:\Users\dell\.rustup\toolchains\nightly-x86_64-pc-windows-msvc\lib/rustlib/src/rust\library\std\src\macros.rs:143:28: 143:61 (#21)
| '?19: '?36 due to Boring at Single(bb3[0]) (examples/safe_buffer.rs:52:5: 52:30 (#32)
| '?20: '?38 due to Assignment at Single(bb8[1]) (examples/safe_buffer.rs:52:29: 52:30 (#33)
| '?21: '?22 due to Predicate(no-location (#0)) at Single(bb8[4]) (examples/safe_buffer.rs:52:5: 52:30 (#32)
| '?21: '?29 due to Return(Normal) at Single(bb8[4]) (examples/safe_buffer.rs:52:5: 52:30 (#32)
| '?22: '?21 due to Predicate(no-location (#0)) at Single(bb8[4]) (examples/safe_buffer.rs:52:5: 52:30 (#32)
| '?23: '?5 due to Boring at Single(bb10[7]) (examples/safe_buffer.rs:53:14: 53:28 (#0)
| '?23: '?46 due to Boring at Single(bb10[7]) (examples/safe_buffer.rs:53:14: 53:28 (#0)
| '?24: '?6 due to Boring at Single(bb10[7]) (examples/safe_buffer.rs:53:14: 53:28 (#0)
| '?24: '?47 due to Boring at Single(bb10[7]) (examples/safe_buffer.rs:53:14: 53:28 (#0)
| '?25: '?43 due to Boring at Single(bb10[8]) (examples/safe_buffer.rs:53:14: 53:28 (#0)
| '?26: '?41 due to Boring at Single(bb10[9]) (examples/safe_buffer.rs:53:14: 53:28 (#0)
| '?27: '?40 due to Boring at Single(bb10[10]) (C:\Users\dell\.rustup\toolchains\nightly-x86_64-pc-windows-msvc\lib/rustlib/src/rust\library\std\src\macros.rs:143:28: 143:61 (#23)
| '?27: '?51 due to TypeAnnotation(GenericArg) at Single(bb10[10]) (C:\Users\dell\.rustup\toolchains\nightly-x86_64-pc-windows-msvc\lib/rustlib/src/rust\library\std\src\macros.rs:143:28: 143:61 (#23)
| '?28: '?29 due to Return(Normal) at Single(bb12[7]) (examples/safe_buffer.rs:54:5: 54:11 (#0)
| '?29: '?0 due to BoringNoLocation at All(examples/safe_buffer.rs:50:14: 50:40) (examples/safe_buffer.rs:50:14: 50:40 (#0)
| '?30: '?56 due to CallArgument(Some(FnDef(DefId(1:3771 ~ std[56cf]::io::stdio::_print), []))) at Single(bb1[1]) (C:\Users\dell\.rustup\toolchains\nightly-x86_64-pc-windows-msvc\lib/rustlib/src/rust\library\std\src\macros.rs:143:9: 143:62 (#20)
| '?31: '?18 due to CallArgument(Some(FnDef(DefId(2:11697 ~ core[0ea9]::fmt::rt::{impl#2}::new_const), ['{erased}, 1_usize]))) at Single(bb0[8]) (C:\Users\dell\.rustup\toolchains\nightly-x86_64-pc-windows-msvc\lib/rustlib/src/rust\library\std\src\macros.rs:143:28: 143:61 (#21)
| '?32: '?0 due to CallArgument(Some(FnDef(DefId(2:11697 ~ core[0ea9]::fmt::rt::{impl#2}::new_const), ['{erased}, 1_usize]))) at Single(bb0[8]) (C:\Users\dell\.rustup\toolchains\nightly-x86_64-pc-windows-msvc\lib/rustlib/src/rust\library\std\src\macros.rs:143:28: 143:61 (#21)
| '?33: '?17 due to Boring at Single(bb0[7]) (examples/safe_buffer.rs:51:14: 51:35 (#0)
| '?34: '?32 due to Boring at Single(bb0[7]) (examples/safe_buffer.rs:51:14: 51:35 (#0)
| '?36: '?20 due to Boring at Single(bb8[1]) (examples/safe_buffer.rs:52:29: 52:30 (#33)
| '?37: '?19 due to CallArgument(Some(FnDef(DefId(2:4257 ~ core[0ea9]::ops::try_trait::Try::branch), [std::result::Result<(), std::boxed::Box<dyn [Binder { value: Trait(std::error::Error), bound_vars: [] }] + '{erased}, std::alloc::Global>>]))) at Single(bb3[0]) (examples/safe_buffer.rs:52:5: 52:30 (#32)
| '?38: '?39 due to Boring at Single(bb8[3]) (examples/safe_buffer.rs:52:29: 52:30 (#33)
| '?39: '?22 due to CallArgument(Some(FnDef(DefId(2:4260 ~ core[0ea9]::ops::try_trait::FromResidual::from_residual), [std::result::Result<(), std::boxed::Box<dyn [Binder { value: Trait(std::error::Error), bound_vars: [] }] + '{erased}, std::alloc::Global>>, std::result::Result<std::convert::Infallible, std::boxed::Box<dyn [Binder { value: Trait(std::error::Error), bound_vars: [] }] + '{erased}, std::alloc::Global>>]))) at Single(bb8[4]) (examples/safe_buffer.rs:52:5: 52:30 (#32)
| '?40: '?57 due to CallArgument(Some(FnDef(DefId(1:3771 ~ std[56cf]::io::stdio::_print), []))) at Single(bb11[1]) (C:\Users\dell\.rustup\toolchains\nightly-x86_64-pc-windows-msvc\lib/rustlib/src/rust\library\std\src\macros.rs:143:9: 143:62 (#22)
| '?41: '?27 due to CallArgument(Some(FnDef(DefId(2:11697 ~ core[0ea9]::fmt::rt::{impl#2}::new_const), ['{erased}, 1_usize]))) at Single(bb10[10]) (C:\Users\dell\.rustup\toolchains\nightly-x86_64-pc-windows-msvc\lib/rustlib/src/rust\library\std\src\macros.rs:143:28: 143:61 (#23)
| '?42: '?0 due to CallArgument(Some(FnDef(DefId(2:11697 ~ core[0ea9]::fmt::rt::{impl#2}::new_const), ['{erased}, 1_usize]))) at Single(bb10[10]) (C:\Users\dell\.rustup\toolchains\nightly-x86_64-pc-windows-msvc\lib/rustlib/src/rust\library\std\src\macros.rs:143:28: 143:61 (#23)
| '?43: '?26 due to Boring at Single(bb10[9]) (examples/safe_buffer.rs:53:14: 53:28 (#0)
| '?44: '?42 due to Boring at Single(bb10[9]) (examples/safe_buffer.rs:53:14: 53:28 (#0)
| '?46: '?25 due to Boring at Single(bb10[8]) (examples/safe_buffer.rs:53:14: 53:28 (#0)
| '?47: '?44 due to Boring at Single(bb10[8]) (examples/safe_buffer.rs:53:14: 53:28 (#0)
| '?48: '?16 due to Boring at Single(bb0[6]) (examples/safe_buffer.rs:51:14: 51:35 (#0)
| '?49: '?34 due to Boring at Single(bb0[6]) (examples/safe_buffer.rs:51:14: 51:35 (#0)
| '?50: '?18 due to TypeAnnotation(GenericArg) at Single(bb0[8]) (C:\Users\dell\.rustup\toolchains\nightly-x86_64-pc-windows-msvc\lib/rustlib/src/rust\library\std\src\macros.rs:143:28: 143:61 (#21)
| '?50: '?53 due to BoringNoLocation at All(C:\Users\dell\.rustup\toolchains\nightly-x86_64-pc-windows-msvc\lib/rustlib/src/rust\library\std\src\macros.rs:143:28: 143:61) (C:\Users\dell\.rustup\toolchains\nightly-x86_64-pc-windows-msvc\lib/rustlib/src/rust\library\std\src\macros.rs:143:28: 143:61 (#21)
| '?51: '?27 due to TypeAnnotation(GenericArg) at Single(bb10[10]) (C:\Users\dell\.rustup\toolchains\nightly-x86_64-pc-windows-msvc\lib/rustlib/src/rust\library\std\src\macros.rs:143:28: 143:61 (#23)
| '?51: '?55 due to BoringNoLocation at All(C:\Users\dell\.rustup\toolchains\nightly-x86_64-pc-windows-msvc\lib/rustlib/src/rust\library\std\src\macros.rs:143:28: 143:61) (C:\Users\dell\.rustup\toolchains\nightly-x86_64-pc-windows-msvc\lib/rustlib/src/rust\library\std\src\macros.rs:143:28: 143:61 (#23)
| '?52: '?53 due to BoringNoLocation at All(C:\Users\dell\.rustup\toolchains\nightly-x86_64-pc-windows-msvc\lib/rustlib/src/rust\library\std\src\macros.rs:143:28: 143:61) (C:\Users\dell\.rustup\toolchains\nightly-x86_64-pc-windows-msvc\lib/rustlib/src/rust\library\std\src\macros.rs:143:28: 143:61 (#21)
| '?53: '?50 due to BoringNoLocation at All(C:\Users\dell\.rustup\toolchains\nightly-x86_64-pc-windows-msvc\lib/rustlib/src/rust\library\std\src\macros.rs:143:28: 143:61) (C:\Users\dell\.rustup\toolchains\nightly-x86_64-pc-windows-msvc\lib/rustlib/src/rust\library\std\src\macros.rs:143:28: 143:61 (#21)
| '?53: '?52 due to BoringNoLocation at All(C:\Users\dell\.rustup\toolchains\nightly-x86_64-pc-windows-msvc\lib/rustlib/src/rust\library\std\src\macros.rs:143:28: 143:61) (C:\Users\dell\.rustup\toolchains\nightly-x86_64-pc-windows-msvc\lib/rustlib/src/rust\library\std\src\macros.rs:143:28: 143:61 (#21)
| '?54: '?55 due to BoringNoLocation at All(C:\Users\dell\.rustup\toolchains\nightly-x86_64-pc-windows-msvc\lib/rustlib/src/rust\library\std\src\macros.rs:143:28: 143:61) (C:\Users\dell\.rustup\toolchains\nightly-x86_64-pc-windows-msvc\lib/rustlib/src/rust\library\std\src\macros.rs:143:28: 143:61 (#23)
| '?55: '?51 due to BoringNoLocation at All(C:\Users\dell\.rustup\toolchains\nightly-x86_64-pc-windows-msvc\lib/rustlib/src/rust\library\std\src\macros.rs:143:28: 143:61) (C:\Users\dell\.rustup\toolchains\nightly-x86_64-pc-windows-msvc\lib/rustlib/src/rust\library\std\src\macros.rs:143:28: 143:61 (#23)
| '?55: '?54 due to BoringNoLocation at All(C:\Users\dell\.rustup\toolchains\nightly-x86_64-pc-windows-msvc\lib/rustlib/src/rust\library\std\src\macros.rs:143:28: 143:61) (C:\Users\dell\.rustup\toolchains\nightly-x86_64-pc-windows-msvc\lib/rustlib/src/rust\library\std\src\macros.rs:143:28: 143:61 (#23)
|
| User Type Annotations
| 0: user_ty: Canonical { value: TypeOf(DefId(2:11697 ~ core[0ea9]::fmt::rt::{impl#2}::new_const), UserArgs { args: ['^0, ^1], user_self_ty: Some(UserSelfTy { impl_def_id: DefId(2:11695 ~ core[0ea9]::fmt::rt::{impl#2}), self_ty: std::fmt::Arguments<'^2> }) }), max_universe: U0, variables: [CanonicalVarInfo { kind: Region(U0) }, CanonicalVarInfo { kind: Const(U0) }, CanonicalVarInfo { kind: Region(U0) }] }, span: C:\Users\dell\.rustup\toolchains\nightly-x86_64-pc-windows-msvc\lib/rustlib/src/rust\library\std\src\macros.rs:143:28: 143:61, inferred_ty: fn(&[&'static str; 1]) -> std::fmt::Arguments<'_> {core::fmt::rt::<impl std::fmt::Arguments<'_>>::new_const::<1>}
| 1: user_ty: Canonical { value: TypeOf(DefId(2:11697 ~ core[0ea9]::fmt::rt::{impl#2}::new_const), UserArgs { args: ['^0, ^1], user_self_ty: Some(UserSelfTy { impl_def_id: DefId(2:11695 ~ core[0ea9]::fmt::rt::{impl#2}), self_ty: std::fmt::Arguments<'^2> }) }), max_universe: U0, variables: [CanonicalVarInfo { kind: Region(U0) }, CanonicalVarInfo { kind: Const(U0) }, CanonicalVarInfo { kind: Region(U0) }] }, span: C:\Users\dell\.rustup\toolchains\nightly-x86_64-pc-windows-msvc\lib/rustlib/src/rust\library\std\src\macros.rs:143:28: 143:61, inferred_ty: fn(&[&'static str; 1]) -> std::fmt::Arguments<'_> {core::fmt::rt::<impl std::fmt::Arguments<'_>>::new_const::<1>}
|
fn main() -> Result<(), Box<dyn std::error::Error>> {
    let mut _0: std::result::Result<(), std::boxed::Box<dyn std::error::Error>>; // return place in scope 0 at examples/safe_buffer.rs:50:14: 50:40
    let _1: ();                          // in scope 0 at C:\Users\dell\.rustup\toolchains\nightly-x86_64-pc-windows-msvc\lib/rustlib/src/rust\library\std\src\macros.rs:142:23: 144:6
    let _2: ();                          // in scope 0 at C:\Users\dell\.rustup\toolchains\nightly-x86_64-pc-windows-msvc\lib/rustlib/src/rust\library\std\src\macros.rs:143:9: 143:62
    let mut _3: std::fmt::Arguments<'_>; // in scope 0 at C:\Users\dell\.rustup\toolchains\nightly-x86_64-pc-windows-msvc\lib/rustlib/src/rust\library\std\src\macros.rs:143:28: 143:61
    let mut _4: &[&str; 1];              // in scope 0 at examples/safe_buffer.rs:51:14: 51:35
    let _5: &[&str; 1];                  // in scope 0 at examples/safe_buffer.rs:51:14: 51:35
    let _6: [&str; 1];                   // in scope 0 at examples/safe_buffer.rs:51:14: 51:35
    let _7: ();                          // in scope 0 at examples/safe_buffer.rs:52:5: 52:30
    let mut _8: std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::boxed::Box<dyn std::error::Error>>>; // in scope 0 at examples/safe_buffer.rs:52:5: 52:30
    let mut _9: std::result::Result<(), std::boxed::Box<dyn std::error::Error>>; // in scope 0 at examples/safe_buffer.rs:52:5: 52:29
    let mut _10: isize;                  // in scope 0 at examples/safe_buffer.rs:52:29: 52:30
    let _11: std::result::Result<std::convert::Infallible, std::boxed::Box<dyn std::error::Error>>; // in scope 0 at examples/safe_buffer.rs:52:29: 52:30
    let mut _12: !;                      // in scope 0 at examples/safe_buffer.rs:52:29: 52:30
    let mut _13: std::result::Result<std::convert::Infallible, std::boxed::Box<dyn std::error::Error>>; // in scope 0 at examples/safe_buffer.rs:52:29: 52:30
    let _14: ();                         // in scope 0 at examples/safe_buffer.rs:52:5: 52:30
    let _15: ();                         // in scope 0 at C:\Users\dell\.rustup\toolchains\nightly-x86_64-pc-windows-msvc\lib/rustlib/src/rust\library\std\src\macros.rs:142:23: 144:6
    let _16: ();                         // in scope 0 at C:\Users\dell\.rustup\toolchains\nightly-x86_64-pc-windows-msvc\lib/rustlib/src/rust\library\std\src\macros.rs:143:9: 143:62
    let mut _17: std::fmt::Arguments<'_>; // in scope 0 at C:\Users\dell\.rustup\toolchains\nightly-x86_64-pc-windows-msvc\lib/rustlib/src/rust\library\std\src\macros.rs:143:28: 143:61
    let mut _18: &[&str; 1];             // in scope 0 at examples/safe_buffer.rs:53:14: 53:28
    let _19: &[&str; 1];                 // in scope 0 at examples/safe_buffer.rs:53:14: 53:28
    let _20: [&str; 1];                  // in scope 0 at examples/safe_buffer.rs:53:14: 53:28
    let mut _21: ();                     // in scope 0 at examples/safe_buffer.rs:54:8: 54:10
    let mut _22: &[&str; 1];             // in scope 0 at examples/safe_buffer.rs:53:14: 53:28
    let mut _23: &[&str; 1];             // in scope 0 at examples/safe_buffer.rs:51:14: 51:35
    scope 1 {
        debug residual => _11;           // in scope 1 at examples/safe_buffer.rs:52:29: 52:30
        scope 2 {
        }
    }
    scope 3 {
        debug val => _14;                // in scope 3 at examples/safe_buffer.rs:52:5: 52:30
        scope 4 {
        }
    }

    bb0: {
        StorageLive(_1);                 // scope 0 at C:\Users\dell\.rustup\toolchains\nightly-x86_64-pc-windows-msvc\lib/rustlib/src/rust\library\std\src\macros.rs:142:23: 144:6
        StorageLive(_2);                 // scope 0 at C:\Users\dell\.rustup\toolchains\nightly-x86_64-pc-windows-msvc\lib/rustlib/src/rust\library\std\src\macros.rs:143:9: 143:62
        StorageLive(_3);                 // scope 0 at C:\Users\dell\.rustup\toolchains\nightly-x86_64-pc-windows-msvc\lib/rustlib/src/rust\library\std\src\macros.rs:143:28: 143:61
        StorageLive(_4);                 // scope 0 at examples/safe_buffer.rs:51:14: 51:35
        StorageLive(_5);                 // scope 0 at examples/safe_buffer.rs:51:14: 51:35
        _23 = const main::promoted[1];   // scope 0 at examples/safe_buffer.rs:51:14: 51:35
                                         // mir::ConstOperand
                                         // + span: examples/safe_buffer.rs:51:14: 51:35
                                         // + const_: Const { ty: &[&str; 1], val: Unevaluated(main, [], Some(promoted[1])) }
        _5 = &(*_23);                    // scope 0 at examples/safe_buffer.rs:51:14: 51:35
        _4 = &(*_5);                     // scope 0 at examples/safe_buffer.rs:51:14: 51:35
        _3 = core::fmt::rt::<impl Arguments<'_>>::new_const::<1>(move _4) -> [return: bb1, unwind: bb20]; // scope 0 at C:\Users\dell\.rustup\toolchains\nightly-x86_64-pc-windows-msvc\lib/rustlib/src/rust\library\std\src\macros.rs:143:28: 143:61
                                         // mir::ConstOperand
                                         // + span: C:\Users\dell\.rustup\toolchains\nightly-x86_64-pc-windows-msvc\lib/rustlib/src/rust\library\std\src\macros.rs:143:28: 143:61
                                         // + user_ty: UserType(0)
                                         // + const_: Const { ty: fn(&[&'static str; 1]) -> Arguments<'_> {core::fmt::rt::<impl Arguments<'_>>::new_const::<1>}, val: Value(core::fmt::rt::<impl Arguments<'_>>::new_const::<1>) }
    }

    bb1: {
        StorageDead(_4);                 // scope 0 at C:\Users\dell\.rustup\toolchains\nightly-x86_64-pc-windows-msvc\lib/rustlib/src/rust\library\std\src\macros.rs:143:60: 143:61
        _2 = _print(move _3) -> [return: bb2, unwind: bb20]; // scope 0 at C:\Users\dell\.rustup\toolchains\nightly-x86_64-pc-windows-msvc\lib/rustlib/src/rust\library\std\src\macros.rs:143:9: 143:62
                                         // mir::ConstOperand
                                         // + span: C:\Users\dell\.rustup\toolchains\nightly-x86_64-pc-windows-msvc\lib/rustlib/src/rust\library\std\src\macros.rs:143:9: 143:27
                                         // + const_: Const { ty: for<'a> fn(Arguments<'a>) {_print}, val: Value(_print) }
    }

    bb2: {
        StorageDead(_3);                 // scope 0 at C:\Users\dell\.rustup\toolchains\nightly-x86_64-pc-windows-msvc\lib/rustlib/src/rust\library\std\src\macros.rs:143:61: 143:62
        StorageDead(_5);                 // scope 0 at C:\Users\dell\.rustup\toolchains\nightly-x86_64-pc-windows-msvc\lib/rustlib/src/rust\library\std\src\macros.rs:143:62: 143:63
        StorageDead(_2);                 // scope 0 at C:\Users\dell\.rustup\toolchains\nightly-x86_64-pc-windows-msvc\lib/rustlib/src/rust\library\std\src\macros.rs:143:62: 143:63
        _1 = const ();                   // scope 0 at C:\Users\dell\.rustup\toolchains\nightly-x86_64-pc-windows-msvc\lib/rustlib/src/rust\library\std\src\macros.rs:142:23: 144:6
        StorageDead(_1);                 // scope 0 at C:\Users\dell\.rustup\toolchains\nightly-x86_64-pc-windows-msvc\lib/rustlib/src/rust\library\std\src\macros.rs:144:5: 144:6
        StorageLive(_7);                 // scope 0 at examples/safe_buffer.rs:52:5: 52:30
        StorageLive(_8);                 // scope 0 at examples/safe_buffer.rs:52:5: 52:30
        StorageLive(_9);                 // scope 0 at examples/safe_buffer.rs:52:5: 52:29
        _9 = safe_buffer_operations() -> [return: bb3, unwind: bb20]; // scope 0 at examples/safe_buffer.rs:52:5: 52:29
                                         // mir::ConstOperand
                                         // + span: examples/safe_buffer.rs:52:5: 52:27
                                         // + const_: Const { ty: fn() -> Result<(), Box<(dyn std::error::Error + 'static)>> {safe_buffer_operations}, val: Value(safe_buffer_operations) }
    }

    bb3: {
        _8 = <Result<(), Box<dyn std::error::Error>> as Try>::branch(move _9) -> [return: bb4, unwind: bb19]; // scope 0 at examples/safe_buffer.rs:52:5: 52:30
                                         // mir::ConstOperand
                                         // + span: examples/safe_buffer.rs:52:5: 52:30
                                         // + const_: Const { ty: fn(Result<(), Box<dyn std::error::Error>>) -> ControlFlow<<Result<(), Box<dyn std::error::Error>> as Try>::Residual, <Result<(), Box<dyn std::error::Error>> as Try>::Output> {<Result<(), Box<dyn std::error::Error>> as Try>::branch}, val: Value(<Result<(), Box<dyn std::error::Error>> as Try>::branch) }
    }

    bb4: {
        StorageDead(_9);                 // scope 0 at examples/safe_buffer.rs:52:29: 52:30
        PlaceMention(_8);                // scope 0 at examples/safe_buffer.rs:52:5: 52:30
        _10 = discriminant(_8);          // scope 0 at examples/safe_buffer.rs:52:5: 52:30
        switchInt(move _10) -> [0: bb7, 1: bb6, otherwise: bb5]; // scope 0 at examples/safe_buffer.rs:52:5: 52:30
    }

    bb5: {
        FakeRead(ForMatchedPlace(None), _8); // scope 0 at examples/safe_buffer.rs:52:5: 52:30
        unreachable;                     // scope 0 at examples/safe_buffer.rs:52:5: 52:30
    }

    bb6: {
        falseEdge -> [real: bb8, imaginary: bb7]; // scope 0 at examples/safe_buffer.rs:52:29: 52:30
    }

    bb7: {
        StorageLive(_14);                // scope 0 at examples/safe_buffer.rs:52:5: 52:30
        _14 = copy ((_8 as Continue).0: ()); // scope 0 at examples/safe_buffer.rs:52:5: 52:30
        _7 = copy _14;                   // scope 4 at examples/safe_buffer.rs:52:5: 52:30
        StorageDead(_14);                // scope 0 at examples/safe_buffer.rs:52:29: 52:30
        drop(_8) -> [return: bb10, unwind: bb20]; // scope 0 at examples/safe_buffer.rs:52:30: 52:31
    }

    bb8: {
        StorageLive(_11);                // scope 0 at examples/safe_buffer.rs:52:29: 52:30
        _11 = move ((_8 as Break).0: std::result::Result<std::convert::Infallible, std::boxed::Box<dyn std::error::Error>>); // scope 0 at examples/safe_buffer.rs:52:29: 52:30
        StorageLive(_13);                // scope 2 at examples/safe_buffer.rs:52:29: 52:30
        _13 = move _11;                  // scope 2 at examples/safe_buffer.rs:52:29: 52:30
        _0 = <Result<(), Box<dyn std::error::Error>> as FromResidual<Result<Infallible, Box<dyn std::error::Error>>>>::from_residual(move _13) -> [return: bb9, unwind: bb16]; // scope 2 at examples/safe_buffer.rs:52:5: 52:30
                                         // mir::ConstOperand
                                         // + span: examples/safe_buffer.rs:52:29: 52:30
                                         // + const_: Const { ty: fn(Result<Infallible, Box<dyn std::error::Error>>) -> Result<(), Box<dyn std::error::Error>> {<Result<(), Box<dyn std::error::Error>> as FromResidual<Result<Infallible, Box<dyn std::error::Error>>>>::from_residual}, val: Value(<Result<(), Box<dyn std::error::Error>> as FromResidual<Result<Infallible, Box<dyn std::error::Error>>>>::from_residual) }
    }

    bb9: {
        StorageDead(_13);                // scope 2 at examples/safe_buffer.rs:52:29: 52:30
        drop(_11) -> [return: bb13, unwind: bb18]; // scope 0 at examples/safe_buffer.rs:52:29: 52:30
    }

    bb10: {
        StorageDead(_8);                 // scope 0 at examples/safe_buffer.rs:52:30: 52:31
        StorageDead(_7);                 // scope 0 at examples/safe_buffer.rs:52:30: 52:31
        StorageLive(_15);                // scope 0 at C:\Users\dell\.rustup\toolchains\nightly-x86_64-pc-windows-msvc\lib/rustlib/src/rust\library\std\src\macros.rs:142:23: 144:6
        StorageLive(_16);                // scope 0 at C:\Users\dell\.rustup\toolchains\nightly-x86_64-pc-windows-msvc\lib/rustlib/src/rust\library\std\src\macros.rs:143:9: 143:62
        StorageLive(_17);                // scope 0 at C:\Users\dell\.rustup\toolchains\nightly-x86_64-pc-windows-msvc\lib/rustlib/src/rust\library\std\src\macros.rs:143:28: 143:61
        StorageLive(_18);                // scope 0 at examples/safe_buffer.rs:53:14: 53:28
        StorageLive(_19);                // scope 0 at examples/safe_buffer.rs:53:14: 53:28
        _22 = const main::promoted[0];   // scope 0 at examples/safe_buffer.rs:53:14: 53:28
                                         // mir::ConstOperand
                                         // + span: examples/safe_buffer.rs:53:14: 53:28
                                         // + const_: Const { ty: &[&str; 1], val: Unevaluated(main, [], Some(promoted[0])) }
        _19 = &(*_22);                   // scope 0 at examples/safe_buffer.rs:53:14: 53:28
        _18 = &(*_19);                   // scope 0 at examples/safe_buffer.rs:53:14: 53:28
        _17 = core::fmt::rt::<impl Arguments<'_>>::new_const::<1>(move _18) -> [return: bb11, unwind: bb20]; // scope 0 at C:\Users\dell\.rustup\toolchains\nightly-x86_64-pc-windows-msvc\lib/rustlib/src/rust\library\std\src\macros.rs:143:28: 143:61
                                         // mir::ConstOperand
                                         // + span: C:\Users\dell\.rustup\toolchains\nightly-x86_64-pc-windows-msvc\lib/rustlib/src/rust\library\std\src\macros.rs:143:28: 143:61
                                         // + user_ty: UserType(1)
                                         // + const_: Const { ty: fn(&[&'static str; 1]) -> Arguments<'_> {core::fmt::rt::<impl Arguments<'_>>::new_const::<1>}, val: Value(core::fmt::rt::<impl Arguments<'_>>::new_const::<1>) }
    }

    bb11: {
        StorageDead(_18);                // scope 0 at C:\Users\dell\.rustup\toolchains\nightly-x86_64-pc-windows-msvc\lib/rustlib/src/rust\library\std\src\macros.rs:143:60: 143:61
        _16 = _print(move _17) -> [return: bb12, unwind: bb20]; // scope 0 at C:\Users\dell\.rustup\toolchains\nightly-x86_64-pc-windows-msvc\lib/rustlib/src/rust\library\std\src\macros.rs:143:9: 143:62
                                         // mir::ConstOperand
                                         // + span: C:\Users\dell\.rustup\toolchains\nightly-x86_64-pc-windows-msvc\lib/rustlib/src/rust\library\std\src\macros.rs:143:9: 143:27
                                         // + const_: Const { ty: for<'a> fn(Arguments<'a>) {_print}, val: Value(_print) }
    }

    bb12: {
        StorageDead(_17);                // scope 0 at C:\Users\dell\.rustup\toolchains\nightly-x86_64-pc-windows-msvc\lib/rustlib/src/rust\library\std\src\macros.rs:143:61: 143:62
        StorageDead(_19);                // scope 0 at C:\Users\dell\.rustup\toolchains\nightly-x86_64-pc-windows-msvc\lib/rustlib/src/rust\library\std\src\macros.rs:143:62: 143:63
        StorageDead(_16);                // scope 0 at C:\Users\dell\.rustup\toolchains\nightly-x86_64-pc-windows-msvc\lib/rustlib/src/rust\library\std\src\macros.rs:143:62: 143:63
        _15 = const ();                  // scope 0 at C:\Users\dell\.rustup\toolchains\nightly-x86_64-pc-windows-msvc\lib/rustlib/src/rust\library\std\src\macros.rs:142:23: 144:6
        StorageDead(_15);                // scope 0 at C:\Users\dell\.rustup\toolchains\nightly-x86_64-pc-windows-msvc\lib/rustlib/src/rust\library\std\src\macros.rs:144:5: 144:6
        StorageLive(_21);                // scope 0 at examples/safe_buffer.rs:54:8: 54:10
        _21 = ();                        // scope 0 at examples/safe_buffer.rs:54:8: 54:10
        _0 = Result::<(), Box<dyn std::error::Error>>::Ok(move _21); // scope 0 at examples/safe_buffer.rs:54:5: 54:11
        StorageDead(_21);                // scope 0 at examples/safe_buffer.rs:54:10: 54:11
        goto -> bb15;                    // scope 0 at examples/safe_buffer.rs:55:2: 55:2
    }

    bb13: {
        StorageDead(_11);                // scope 0 at examples/safe_buffer.rs:52:29: 52:30
        drop(_8) -> [return: bb14, unwind: bb20]; // scope 0 at examples/safe_buffer.rs:52:30: 52:31
    }

    bb14: {
        StorageDead(_8);                 // scope 0 at examples/safe_buffer.rs:52:30: 52:31
        StorageDead(_7);                 // scope 0 at examples/safe_buffer.rs:52:30: 52:31
        goto -> bb15;                    // scope 0 at examples/safe_buffer.rs:55:2: 55:2
    }

    bb15: {
        return;                          // scope 0 at examples/safe_buffer.rs:55:2: 55:2
    }

    bb16 (cleanup): {
        drop(_13) -> [return: bb17, unwind terminate(cleanup)]; // scope 2 at examples/safe_buffer.rs:52:29: 52:30
    }

    bb17 (cleanup): {
        drop(_11) -> [return: bb18, unwind terminate(cleanup)]; // scope 0 at examples/safe_buffer.rs:52:29: 52:30
    }

    bb18 (cleanup): {
        drop(_8) -> [return: bb20, unwind terminate(cleanup)]; // scope 0 at examples/safe_buffer.rs:52:30: 52:31
    }

    bb19 (cleanup): {
        drop(_9) -> [return: bb20, unwind terminate(cleanup)]; // scope 0 at examples/safe_buffer.rs:52:29: 52:30
    }

    bb20 (cleanup): {
        resume;                          // scope 0 at examples/safe_buffer.rs:50:1: 55:2
    }
}
